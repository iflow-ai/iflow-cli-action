name: Build and Deploy Homepage

on:
  # Run every day at 02:00 UTC
  schedule:
    - cron: '0 2 * * *'
  # Allow manual trigger
  workflow_dispatch:
  # Also run on pushes to main branch
  push:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAGES: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Create homepage directory
        run: mkdir -p _site

      - name: Generate homepage using iFlow CLI
        uses: ./
        with:
          prompt: |
            Read the README.md and README_zh.md files from this repository (do not read any other files). Create a beautiful, responsive HTML documentation website and save it as _site/index.html with the following requirements:
            1. Content & Structure:
              - Include all important information from both README files
              - Create a bilingual documentation site with English as primary language
              - Organize content with clear sections matching the README structure
              - Include code examples with proper syntax highlighting

            2. Design & Responsiveness:
              - Modern, responsive CSS with mobile-first approach
              - Fluid layout with flexible grid system
              - Touch-friendly elements (minimum 44px tap targets)
              - Responsive typography with appropriate font sizes/line heights
              - Optimized images and icons
              - Clean mobile navigation menu

            3. Visual Style:
              - Neo-expressionist aesthetic with bold colors and expressive design
              - Asymmetric layouts with dramatic visual hierarchy
              - Dynamic gradients and textured backgrounds
              - Emotional typography and artistic elements
              - Expressive code highlighting scheme

            4. Internationalization:
              - Add elegant language toggle (EN/CN) in top-right corner
              - Implement smooth language switching with JavaScript
              - Maintain user's language preference in localStorage
              - Auto-detect browser language (English preferred)
              - Properly mark HTML lang attribute
              - Optimize font rendering for both languages
              - Adapt layout for different text lengths
              - Include complete English-Chinese content parity

            5. Technical Requirements:
              - High contrast, readable text (minimum 16px with 1.5 line height)
              - Accessible color combinations (at least 4.5:1 contrast ratio)
              - Proper meta tags for SEO (viewport, description, etc.)
              - Subtle animations and interactive elements
              - Include GitHub project logo and icons
              - Create navigation with collapsible mobile menu
              - Ensure cross-device consistency

            Project URL: https://github.com/vibe-ideas/iflow-cli-action

            Create the HTML file directly - do not return the code as text.
          api_key: ${{ secrets.IFLOW_API_KEY }}
          # settings_json: ${{ secrets.IFLOW_SETTINGS_JSON }}
          model: "Qwen3-Coder"
          timeout: "1800"
          extra_args: "--debug"

      - name: Verify homepage was generated
        run: |
          if [ -f "_site/index.html" ]; then
            echo "Homepage generated successfully!"
            ls -la _site/
          else
            echo "Error: Homepage was not generated by iFlow"
            exit 1
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4