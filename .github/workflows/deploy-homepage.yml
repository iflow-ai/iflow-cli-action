name: Build and Deploy Homepage

on:
  # Run every day at 02:00 UTC
  schedule:
    - cron: '0 2 * * *'
  # Allow manual trigger
  workflow_dispatch:
  # Also run on pushes to main branch
  push:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAGES: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Create homepage directory
        run: mkdir -p _site

      - name: Generate homepage using iFlow CLI
        uses: ./
        with:
          prompt: "生成一个美观的 HTML 主页文件，保存为 _site/index.html。主页应该介绍 iFlow CLI Action 这个 GitHub Action 项目，包含以下内容：项目简介、主要功能特性、使用示例、快速开始指南等。使用现代化的 CSS 样式，包含渐变背景、卡片布局、响应式设计。请直接创建文件，不要返回代码内容。"
          # api_key: ${{ secrets.IFLOW_API_KEY }}
          settings_json: ${{ secrets.IFLOW_SETTINGS_JSON }}
          model: "Qwen3-Coder"
          timeout: 300

      - name: Verify homepage was generated
        run: |
          if [ -f "_site/index.html" ]; then
            echo "Homepage generated successfully!"
            ls -la _site/
          else
            echo "Error: Homepage was not generated by iFlow"
            exit 1
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4